version: "3.7"

networks:
  dev:
    external: false

services:
  loki:
    image: grafana/loki:2.0.0
    container_name: "dev.loki"
    restart: unless-stopped
    ports:
      - "7431:3100"
    # command: -config.file=/etc/loki/local-config.yaml
    networks:
      - dev
    volumes:
      - ./.docker/loki-config.yaml:/etc/loki/local-config.yaml
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  promtail:
    image: grafana/promtail:2.0.0
    container_name: "dev.promtail"
    restart: unless-stopped
    networks:
      - dev
    volumes:
      - /var/log:/var/log
      - ./.docker/promtail-config.yaml:/etc/loki/local-config.yaml
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  grafana:
    image: grafana/grafana:latest
    container_name: "dev.grafana"
    restart: unless-stopped
    ports:
      - "${GF_PORT}:3000"
    networks:
      - dev
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_DEFAULT_THEME=${GF_USERS_DEFAULT_THEME}
      - GF_USERS_ALLOW_SIGN_UP=${GF_USERS_ALLOW_SIGN_UP}
      - GF_USERS_ALLOW_ORG_CREATE=${GF_USERS_ALLOW_ORG_CREATE}
      - GF_AUTH_ANONYMOUS_ENABLED=${GF_AUTH_ANONYMOUS_ENABLED}
      - GF_INSTALL_PLUGINS=${GF_INSTALL_PLUGINS}
    depends_on:
      - loki
      - promtail

  gitea:
    image: gitea/gitea:latest
    container_name: "dev.gitea"
    restart: unless-stopped
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - GITEA__database__DB_TYPE=${DB_TYPE}
      - GITEA__database__HOST=${DB_HOST}
      - GITEA__database__NAME=${DB_NAME}
      - GITEA__database__USER=${DB_USER}
      - GITEA__database__PASSWD=${DB_PASSWORD}
      - DEFAULT_THEME=${GITEA_THEME}
      - AUTHOR="Gitea - Git with a cup of tea"
      - HTTP_PORT=${GITEA_PORT}
    restart: unless-stopped
    volumes:
      - ./storage/gitea.data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "${GITEA_PORT}:${GITEA_PORT}"
    networks:
      - dev
    depends_on:
      - db

  adminer:
    image: adminer:latest
    container_name: "dev.adminer"
    restart: unless-stopped
    ports:
      - '${ADMINER_PORT}:8080'
    networks:
      - dev
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - db

  db:
    image: mariadb:latest
    container_name: "dev.db"
    restart: unless-stopped
    #ports:
    #  - '7406:3306'
    networks:
      - dev
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
    volumes:
      - ./storage/db.data:/var/lib/mysql
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  mail:
    image: schickling/mailcatcher:latest
    container_name: "dev.mail"
    restart: unless-stopped
    ports:
      - '7418:1080'
    networks:
      - dev
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  php:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./.docker/php/Dockerfile
      target: development
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    container_name: dev.php
    volumes:
      - ./src/backend:/var/www/backend
    networks:
      - dev
    ports:
      - '7409:7409'
    expose:
      - 9000

  nodejs:
    build:
      context: .
      dockerfile: ./.docker/nodejs/Dockerfile
      target: development
    container_name: "dev.nodejs"
    restart: unless-stopped
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    networks:
      - dev
    ports:
      - '7490:7090'
    volumes:
      - ./src/frontend:/var/www/frontend
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  nginx:
    build: ./.docker/nginx/
    container_name: dev.nginx
    ports:
      - "7480:80"
    depends_on:
      - php
    volumes:
      - ./src/frontend:/var/www/frontend
      - ./src/backend:/var/www/backend
